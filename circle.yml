version: 2
jobs:
  build:
    parallelism: 1
    docker:
      # The primary container is an instance of the first list image listed. Your build commands run in this container.
      #- image: ubuntu:trusty
      - image: circleci/python:2.7
    working_directory: ~/st2
    environment:
      - DISTROS: "trusty xenial el6 el7"
      - ST2_PACKAGES_REPO: https://github.com/StackStorm/st2-packages
      - DEPLOY_PACKAGES: 0
      - DOCKER_VERSION: 17.03.0-ce
      - DOCKER_COMPOSE_VERSION: 1.14.0
      - COMPOSE_FILE: docker-compose.circle2.yml:docker-compose.override.yml
      - CIRCLE_ENV: ~/.buildenv
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
      - run:
          name: Docker version
          command: |
            set -x
            docker --version
            docker-compose --version

      - run:
          name: Download st2-packages repository
          command: |
            set -x
            git clone ${ST2_PACKAGES_REPO} ~/st2-packages
            cd ~/st2-packages
            git checkout ${CIRCLE_BRANCH} || true

      - run:
          name: Initialize Build Environment
          command: |
            set -x
            .circle/buildenv_st2.sh
            .circle/buildenv_mistral.sh
          working_directory: ~/st2-packages

      - run:
          name: Test env
          command: |
            export TEST_ENV=12345
            echo $TEST_ENV

      - run:
          name: Test env
          command: |
            echo $TEST_ENV
            echo $DISTRO

      - run:
          # Workaround for CircleCI docker-compose limtation where volumes don't work
          # See detailed explanation: https://circleci.com/docs/2.0/building-docker-images/#mounting-folders
          name: Copy st2-packages files to build containers
          command: |
            # creating dummy container which will hold a volume with data files
            docker create -v /root/st2-packages -v /root/build -v /var/log/st2 -v /var/log/mistral -v /root/.cache/pip -v /tmp/wheelhouse --name st2-packages-vol alpine:3.4 /bin/true
            # copy st2-packages data files into this volume
            docker cp ~/st2-packages st2-packages-vol:/root

      - run:
          name: Pull the images
          command: docker-compose run trusty /bin/true
          working_directory: ~/st2-packages

      - run:
          name: Build the packages
          command: |
            docker-compose run trusty build
            # Once build container finishes we can copy packages directly from it
            docker cp st2-packages-vol:/root/build /tmp/st2-packages
          working_directory: ~/st2-packages

#      - run:
#          # TODO: It works! Enable cache for pip and wheelhouse
#          name: Build the packages 2nd time (compare timing)
#          command: |
#            docker-compose run trusty build
#          working_directory: ~/st2-packages

      - run:
          name: Test the packages
          command: |
            docker-compose run trusty test
            # Once test container finishes we can copy logs directly from it
            mkdir -p /tmp/st2-packages/log
            docker cp st2-packages-vol:/var/log/st2 /tmp/st2-packages/log/st2
            docker cp st2-packages-vol:/var/log/mistral /tmp/st2-packages/log/mistral
          working_directory: ~/st2-packages

      - store_artifacts:
          path: /tmp/st2-packages
