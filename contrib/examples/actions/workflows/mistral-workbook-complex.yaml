version: "2.0"
name: "examples.mistral-workbook-complex"

workflows:

    main:
        type: direct
        input:
            - vm_name
            - cpu_cores
            - memory_mb
        output:
            vm_id: $.vm_id
            vm_state: $.vm_state 
        task-defaults:
          on-error:
            - fail
        tasks:
            register_dns:
                action: core.local
                input:
                    cmd: "sleep 1; printf 'registered.'"
                publish:
                    ip: "10.1.23.99"
                on-success:
                    - create_vm
            create_vm:
                workflow: create_vm
                input:
                    name: $.vm_name
                    ip: $.ip
                publish:
                    vm_id: $.create_vm.vm_id
                    message: "VM {$.vm_name} is created."
                on-success:
                    - power_off_vm
                    - notify
            power_off_vm:
                action: core.local
                input:
                    cmd: "sleep 2; printf 'stopped'"
                publish:
                    vm_state: $.power_off_vm.stdout
                    message: "VM {$.vm_name} is powered off."
                on-success:
                    - reconfig_vm
                    - notify
            reconfig_vm:
                workflow: reconfig_vm
                input:
                    vm_id: $.vm_id
                    cpu_cores: $.cpu_cores
                    memory_mb: $.memory_mb
                publish:
                    message: "VM {$.vm_name} is reconfigured."
                on-success:
                    - power_on_vm
                    - notify
            power_on_vm:
                action: core.local
                input:
                    cmd: "sleep 2; printf 'running'"
                publish:
                    vm_state: $.power_on_vm.stdout
                    message: "VM {$.vm_name} is powered on."
                on-success:
                    - notify_request_fulfilled
                    - notify
            notify_request_fulfilled:
                publish:
                    message: "VM request is fulfilled."
                on-success:
                    - notify
            notify:
                action: core.local
                input:
                    cmd: "printf '{$.message}'"

    create_vm:
        type: direct
        input:
            - name
            - ip
        output:
            vm_id: $.vm_id
        task-defaults:
          on-error:
            - fail
        tasks:
            create:
                action: core.local
                input:
                    cmd: "sleep 5; printf 'vm1234'"
                publish:
                    vm_id: $.create.stdout

    reconfig_vm:
        type: direct
        input:
            - vm_id
            - cpu_cores
            - memory_mb
        task-defaults:
          on-error:
            - fail
        tasks:
            add_disk:
                action: core.local
                input:
                    cmd: "sleep 1; printf 'configured'"
            add_nics:
                action: core.local
                input:
                    cmd: "sleep 1; printf 'configured'"
            edit_cpu_mem:
                action: core.local
                input:
                    cmd: "sleep 1; printf 'configured'"
